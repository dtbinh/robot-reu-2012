# Antonella Wilby and Vivian Wehner

#!/usr/bin/env python
import roslib; roslib.load_manifest('irobot_mudd')
import rospy
import irobot_mudd
import sensor_msgs.msg as sm
from irobot_mudd.srv import *
from irobot_mudd.msg import *
from Data import Data
import math
import sys
import traceback


class Robot:
    def __init__(self):
        self.speed = (0, 0)
        self.state = "not active"  # So this should probably be renamed activity
        self.curState = ""         # Actual state, but not functional anymore
        self.max_speed = 100
        self.ideal_dist = 15000
        self.tank = rospy.ServiceProxy('tank',Tank)
        self.stop = False
        self.name = "r1"
        self.num = 1
    
    def move(self, left, right):
        tb = "No error"
        """
        try:
            self.tank(0,0)
            self.speed = (0,0)
        except:
            print "There was a problem"
            print "error", sys.exc_info()[0]
            tb = traceback.format_exc()
            # if it's more serious...
            # then here we should restart/reset the driver...
            print "Traceback is", tb
        """
        if self.state == "active":
            #if (left,right) == self.speed:
            #   return
            try:
                self.tank(left, right)
                self.speed = (left, right)
            except:
                print "There was a problem"
                print "error", sys.exc_info()[0]
                tb = traceback.format_exc()
                # if it's more serious...
                # then here we should restart/reset the driver...
                print "Traceback is", tb
            
        elif self.state == "not active":
            self.tank(0,0)
            self.speed = (0,0)
            print "Robot is not active"
            
            
"""
import traceback

tb = "No error"

try:
    raise ValueError
except:
    tb = traceback.format_exc()
finally:
    print tb
"""
